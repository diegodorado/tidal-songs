msg.setPort(6666)
peaks1 = new Array(8).fill(0)
powers1 = new Array(8).fill(0)
peaks2 = new Array(8).fill(0)
powers2 = new Array(8).fill(0)
msg.on('/rms', (args) => {
  // ["/rms", synthID, orbitIndex, peak1, power1, peak2, power2, â€¦]
  let buffer = Buffer.from(args[0].data);
  let index = buffer.readInt32BE(20)
  peaks1[index] = buffer.readFloatBE(24)
  powers1[index] = buffer.readFloatBE(28)
  peaks2[index] = buffer.readFloatBE(32)
  powers2[index] = buffer.readFloatBE(36)
})


voronoi(1,0.51, 0.8)
// voronoi( ()=>peaks1[3]*10,0.51, 0.8)
  .color(0, 0.8, 1.0)
  // .saturate(()=>peaks1[1]*5)
  // .saturate(0.35)
  .colorama(20.2)
  // .luma( ()=>peaks1[0]*5)
  // .kaleid(()=>Math.round(peaks2[2]*20))
   .kaleid(()=>6)
  .out(o1)
src(o1)
  .scale(1.05)
  .saturate(()=>peaks1[1]*100)
  // .saturate(1.9)
  .pixelate(150, 150)
  .scrollY(({time}) => (time*0.52))
  // .scrollY(()=>peaks1[5]*5)
  // .diff(o1)
  // .blend(o1,0.95)
  .rotate(({time}) => Math.sin(time))
  // .rotate(()=>peaks1[0]*50)
  .rotate(({time}) => (time*0.2))
  // .scale( ()=>peaks1[1]+0.5)
  // .scale( ()=>peaks1[5]+0.5)
  //.saturate(0)
  .out()
